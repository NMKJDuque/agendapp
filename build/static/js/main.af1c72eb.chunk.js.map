{"version":3,"sources":["store/user/userTypes.js","components/Input/styles.js","components/Input/index.js","store/tasks/taskTypes.js","store/createTask/createTaskTypes.js","store/responsibles/responsibleTypes.js","utils/HttpRequest.js","constants/HttpEndpoints.js","utils/LocalStorageToken.js","store/tasks/taskActions.js","store/createTask/createTaskActions.js","store/user/userActions.js","store/responsibles/responsibleActions.js","components/Button/styles.js","components/Button/index.js","themes/theme1.js","contexts/FilterStatusContext.js","constants/Auth.js","constants/TaskFilterStatus.js","pages/Splash/index.js","globalStyles.js","pages/Signup/index.js","components/LinkTo/styles.js","components/LinkTo/index.js","pages/Signin/styles.js","pages/Signin/index.js","pages/NotFound/index.js","components/Menu/comoponents/styles.js","components/Menu/comoponents/ItemMenu.js","components/Menu/styles.js","components/Menu/index.js","components/Loading/styles.js","components/Loading/index.js","pages/NavigationApp.js","store/tasks/taskReducer.js","store/createTask/createTaskReducer.js","store/user/userReducer.js","store/responsibles/responsibleReducer.js","store/rootReducer.js","store/store.js","App.js","index.js"],"names":["FETCH_LOGIN_REQUEST","FETCH_LOGIN_SUCCESS","FETCH_LOGIN_FAILURE","AUTOLOGIN_SUCCESS","AUTOLOGIN_FAILURE","InputContainer","styled","section","Label","label","InputWraper","div","InputType","input","IconWrapper","span","iconStyle","fontSize","color","Icono","showEye","onPress","onClick","style","Input","type","placeholder","Icon","icon","register","name","rules","useState","typeInput","setTypeInput","e","FETCH_TASK_REQUEST","FETCH_TASK_SUCCESS","FETCH_TASK_FAILURE","CREATE_TASK_REQUEST","CREATE_TASK_SUCCESS","CREATE_TASK_FAILURE","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","HTTP_VERBS","headersConfig","token","requestHttp","a","method","endpoint","data","params","options","url","process","headers","axios","USERS","TASK","TOKEN","getToken","localStorage","getItem","setToken","value","setItem","fetchTasks","filter","dispatch","fetchTaskRequest","response","fetchTaskSuccess","fetchTaskFailure","statusText","callHttp","tasks","payload","error","createTasks","dataTask","createTaskRequest","stringCollaborators","collaborators","map","key","push","newData","title","description","due_date","responsible","createTaskSuccess","createTaskFailure","fetchLogin","credentials","fetchLoginRequest","fetchLoginSuccess","messageError","fetchLoginFailure","autologin","fetchUsers","StyleButton","button","props","bgColor","Color","disabled","Button","text","Theme1","primary","secoundary","danger","initialState","STATUS_FILTER","ALL","FilterStatusContext","createContext","FilterStatusProvider","children","currentTaskFilter","setCurrentTaskFilter","Provider","useFilterStatus","useContext","NEW","IN_PROGRESS","DUE_DATE","CLOSED","SplashWrapper","Splash","Fragment","alt","src","Globalstyle","createGlobalStyle","PageWrapper","PageWrapperMenu","LogoWrapper","TopLink","Signup","LinkWrapper","LinkTo","to","LabelError","Signin","useDispatch","userData","useSelector","state","user","useForm","mode","handleSubmit","control","formState","errors","isValid","onSubmit","console","log","required","minLength","password","loading","NotFound","ItemWrapper","active","p","ItemMenu","path","MenuWrapper","menu","MenuOptions","FaHome","FaCalendar","FaCheckCircle","FaUser","Menu","pathname","item","i","LoadingProgress","Loading","Home","React","lazy","Schedule","CreateTask","TaskDetail","AutenticatedUser","useLocation","useEffect","NotAutenticatedUser","NavigationApp","setTimeout","splash","isAuth","exact","component","fallback","reducer","action","responsibles","arreglo","datos","length","_id","rootReducer","combineReducers","task","taskReducer","userReducer","responsibleReducer","createTask","createTaskReducer","store","createStore","applyMiddleware","logger","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1c72eb.chunk.js","sourcesContent":["export const FETCH_LOGIN_REQUEST = 'FETCH_LOGIN_REQUEST';\nexport const FETCH_LOGIN_SUCCESS = 'FETCH_LOGIN_SUCCESS';\nexport const FETCH_LOGIN_FAILURE = 'FETCH_LOGIN_FAILURE';\nexport const AUTOLOGIN_SUCCESS = 'AUTOLOGIN_SUCCESS';\nexport const AUTOLOGIN_FAILURE = 'AUTOLOGIN_FAILURE';\n//export const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\n","import styled from \"styled-components\";\n\nexport const InputContainer = styled.section`\n    margin: 15px 0px;\n`;\n\nexport const Label = styled.label`\n    font-size: 1.1em;\n`;\n\nexport const InputWraper = styled.div`\n    border-radius: 3px;\n    border: 1px solid #ccc;\n    display: flex;\n    align-items: center;\n`;\n\nexport const InputType = styled.input`\n    border: 0;\n    outline: none;\n    background: transparent;\n    color: #222;\n    flex: 1;\n    padding: 5px 10px;\n    font-size: 1.1em;\n`;\n\nexport const IconWrapper = styled.span`\n    margin: 0 10px;\n`;\n","import React, { useState } from \"react\";\nimport { InputWraper, Label, InputType, InputContainer, IconWrapper } from \"./styles\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\n\nconst iconStyle = {\n    fontSize: '20px',\n    color: '#ccc',\n};\n\nconst Icono = ({showEye, onPress}) => (\n    <IconWrapper onClick={onPress}>\n        {showEye ? <FaEyeSlash style={iconStyle}/> : <FaEye style={iconStyle}/>}\n    </IconWrapper>\n);\n\nexport const Input = ({label, type, placeholder, icon:Icon, register = () =>{}, name, rules }) => {\n    const [typeInput, setTypeInput] = useState(type);\n\n    const toogleTypeInput = (e) => {\n        setTypeInput(typeInput === 'password' ? 'text' : 'password');\n    }\n    return (\n        <InputContainer>\n            <Label>{label}</Label>\n            <InputWraper>\n                <InputType {...register(name, rules)} placeholder={placeholder} type={typeInput}/>\n                <IconWrapper>\n                {\n                    type === 'password' &&  (\n                        <Icono onPress={toogleTypeInput} showEye={typeInput === 'text'} />\n                    )\n                }\n                {\n                    type !== 'password' && Icon &&( <Icon style={iconStyle}/>)\n                }\n                </IconWrapper>\n            </InputWraper>\n\n        </InputContainer>\n    );\n\n};\n","export const FETCH_TASK_REQUEST = 'FETCH_TASK_REQUEST';\nexport const FETCH_TASK_SUCCESS = 'FETCH_TASK_SUCCESS';\nexport const FETCH_TASK_FAILURE = 'FETCH_TASK_FAILURE';\n\n","export const CREATE_TASK_REQUEST = 'CREATE_TASK_REQUEST';\nexport const CREATE_TASK_SUCCESS = 'CREATE_TASK_SUCCESS';\nexport const CREATE_TASK_FAILURE = 'CREATE_TASK_FAILURE';\n","export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE';\n","import axios from \"axios\";\n\nexport const HTTP_VERBS = {\n    POST: 'post',\n    GET: 'get',\n    DELETE: 'delete',\n    PUT: 'put'\n}\n\nconst headersConfig = (token) => {\n    return{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${token}`,\n    };\n};\n\nexport const requestHttp = async ({\n    method = HTTP_VERBS.POST, \n    endpoint, \n    data = {}, \n    params = {},\n    token = \"\",\n}) => {\n    try{\n        const url = process.env.REACT_APP_BASE_URL + endpoint;\n        const options = {\n            method,\n            url,\n            data,\n            params,\n            headers: headersConfig(token)\n        };\n        return await axios(options);\n    }catch(error){\n        throw error;\n    }\n\n};\n","export const USERS = {\n    login: 'auth/signin',\n    check: 'auth/check'\n    \n};\n\nexport const TASK = {\n    getTask: 'tasks',\n    createTask: 'tasks/create'\n};\n","\nconst TOKEN = 'TOKEN'\n\nexport const getToken = () => {\n    return localStorage.getItem(TOKEN);\n\n}\n\nexport const setToken = (value) => {\n    return localStorage.setItem(TOKEN, value);\n}\n","import {FETCH_TASK_FAILURE, FETCH_TASK_REQUEST, FETCH_TASK_SUCCESS} from './taskTypes';\nimport { HTTP_VERBS, requestHttp } from \"../../utils/HttpRequest\";\nimport { TASK } from '../../constants/HttpEndpoints';\nimport { getToken } from '../../utils/LocalStorageToken';\n\nexport const fetchTasks = (filter = {}) => {\n    return (dispatch) => {\n        dispatch(fetchTaskRequest());\n\n        //const token = localStorage.getItem(TOKEN);\n        const callHttp = async (filter) =>{\n                try{\n                    const token = getToken();\n                    const response = await requestHttp(\n                        {\n                            method: HTTP_VERBS.GET,\n                            token,\n                            endpoint: TASK.getTask,\n                            params: filter\n                        }\n                    );\n                    dispatch(fetchTaskSuccess(response.data));\n                }catch(error){\n                    dispatch(fetchTaskFailure(error.response.statusText));\n                }\n            }\n            callHttp(filter);\n        };\n        \n        \n}\n\nexport const fetchTaskRequest = () => {\n    return {\n        type: FETCH_TASK_REQUEST\n    }\n}\n\nexport const fetchTaskSuccess = (tasks) => {\n    return {\n        type: FETCH_TASK_SUCCESS,\n        payload: tasks\n    }\n}\n\nexport const fetchTaskFailure = (error) => {\n    return {\n        type: FETCH_TASK_FAILURE,\n        payload: error\n    }\n}\n\n\n","import {CREATE_TASK_REQUEST, CREATE_TASK_SUCCESS, CREATE_TASK_FAILURE} from './createTaskTypes';\nimport { HTTP_VERBS, requestHttp } from \"../../utils/HttpRequest\";\nimport { TASK } from '../../constants/HttpEndpoints';\nimport { getToken } from '../../utils/LocalStorageToken';\n\nexport const createTasks = (dataTask = {}) => {\n    return (dispatch) => {\n        dispatch(createTaskRequest());\n\n        //const token = localStorage.getItem(TOKEN);\n        const token = getToken();\n\n        const callHttp = async (dataTask) =>{\n                try{\n                    let stringCollaborators = [];\n\n                    dataTask.collaborators.map( (value, key) =>{\n                        stringCollaborators.push(value.value);\n                    }); \n                    \n                    let newData = {\n                        \"title\": dataTask.title,\n                        \"description\": dataTask.description,\n                        \"due_date\": dataTask.due_date,\n                        \"responsible\": dataTask.responsible.value,\n                        \"collaborators\": stringCollaborators\n                    };\n                    const response = await requestHttp(\n                        {\n                            method: HTTP_VERBS.POST,\n                            token,\n                            endpoint: TASK.createTask,\n                            data: newData\n                        }\n                    );\n                    dispatch(createTaskSuccess(response.data));\n                }catch(error){\n                    dispatch(createTaskFailure(error.response.statusText));\n                }\n            }\n            callHttp(dataTask);\n        };\n        \n        \n}\n\nexport const createTaskRequest = () => {\n    return {\n        type: CREATE_TASK_REQUEST\n    }\n}\n\nexport const createTaskSuccess = (tasks) => {\n    return {\n        type: CREATE_TASK_SUCCESS,\n        payload: tasks\n    }\n}\n\nexport const createTaskFailure = (error) => {\n    return {\n        type: CREATE_TASK_FAILURE,\n        payload: error\n    }\n}\n","import {requestHttp, HTTP_VERBS} from \"../../utils/HttpRequest\";\nimport {FETCH_LOGIN_REQUEST, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_FAILURE, AUTOLOGIN_SUCCESS, AUTOLOGIN_FAILURE} from \"./userTypes\";\nimport { USERS } from \"../../constants/HttpEndpoints\";\nimport { getToken, setToken } from \"../../utils/LocalStorageToken\";\n\nexport const fetchLogin = (credentials = {}) => {\n    return (dispatch) => {\n        dispatch(fetchLoginRequest());\n        const callHttp = async (credentials) =>{\n                try{\n                    const response = await requestHttp(\n                        {\n                            method: HTTP_VERBS.POST,\n                            endpoint: USERS.login,\n                            data: credentials\n                        }\n                    );\n                    //localStorage.setItem(TOKEN,response.data.token)\n                    setToken(response.data.token)\n                    dispatch(fetchLoginSuccess());\n                }catch(error){\n                    const messageError = error.response.statusText || 'error';\n                    dispatch(fetchLoginFailure(messageError));\n                }\n            }\n            callHttp(credentials);\n        };\n        \n        \n}\n\n\nexport const fetchLoginRequest = () => {\n    return {\n        type: FETCH_LOGIN_REQUEST\n    }\n}\n\nexport const fetchLoginSuccess = (tasks) => {\n    return {\n        type: FETCH_LOGIN_SUCCESS,\n        \n    }\n}\n\nexport const fetchLoginFailure = (error) => {\n    return {\n        type: FETCH_LOGIN_FAILURE,\n        payload: error\n    }\n}\n\nexport const autoLoginFailure = ()=> {\n    return{\n        type: AUTOLOGIN_FAILURE\n    }\n}\nexport const autoLoginSuccess = ()=> {\n    return {\n        type: AUTOLOGIN_SUCCESS\n    }\n}\n\nexport const autologin = () => {\n    return (dispatch) => {\n        \n        \n        const callHttp = async () =>{\n            try{\n                const token = getToken();\n                const response = await requestHttp(\n                    {\n                        method: HTTP_VERBS.POST,\n                        endpoint: USERS.check,\n                        token\n                    }\n                );\n                dispatch(autoLoginSuccess());\n            }catch(error){\n                //const messageError = error.response.statusText || 'error';\n                dispatch(autoLoginFailure());\n            }\n        }\n        callHttp();\n        \n\n       // if (token) dispatch(autologinSuccess());\n        //if (!token) dispatch(autologinFailure());\n    }\n}\n\n\n\n\n","import {requestHttp, HTTP_VERBS} from \"../../utils/HttpRequest\";\nimport {FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE} from \"./responsibleTypes\";\nimport { TOKEN } from \"../../constants/Auth\";\n\nexport const fetchUserRequest = () => {\n    return {\n        type: FETCH_USERS_REQUEST\n    }\n}\nexport const fetchUserSuccess = (responsible)=> {\n    return {\n        type: FETCH_USERS_SUCCESS,\n        payload: responsible\n    }\n}\nexport const fetchUserFailure = (error) => {\n    return {\n        type: FETCH_USERS_FAILURE,\n        payload: error\n    }\n}\nexport const fetchUsers = () => {\n    return (dispatch) => {\n        dispatch(fetchUserRequest());\n        const token = localStorage.getItem(TOKEN);\n        const callHttp = async () =>{\n                try{\n                    const response = await requestHttp(\n                        {\n                            method: HTTP_VERBS.GET,\n                            token,\n                            endpoint: 'users'\n                        }\n                    );\n                    //localStorage.setItem(TOKEN,response.data.token)\n                    //console.log(response.data);\n                    dispatch(fetchUserSuccess(response.data));\n                }catch(error){\n                    const messageError = error.response.statusText || 'error';\n                    dispatch(fetchUserFailure(messageError));\n                }\n            }\n            callHttp();\n        };\n        \n        \n}\n","import styled from \"styled-components\";\n\nexport const StyleButton = styled.button`\n    width: 100%;\n    background-color: ${props => props.bgColor || '#FA7A01'};\n    color: ${props => props.Color || '#FFF'};\n    border-color: ${props => props.bgColor || '#FA7A01'};\n    opacity: ${props => props.disabled ? 0.3: 1};\n    border-width: 1;\n    border-style: solid;\n    cursor: pointer;\n    padding: 10px 10px;\n    text-align: center;\n    font-size: 1.05em;\n    border-radius: 10px;\n    font-weight: bold;\n    outline: none;\n`;\n","import { StyleButton } from \"./styles\";\n\nexport const Button = ({text, bgColor, color, type='button', onPress, disabled}) =>(\n\n    <StyleButton disabled={disabled} bgColor={bgColor} type={type} color={color} onClick={onPress}>{text}</StyleButton>\n)\n","export const Theme1 = {\n    primary: '#0f66ff',\n    secoundary: '#FA7A01',\n    danger: '#d50000'\n}\n","import  {createContext, useContext, useState} from 'react';\nimport { STATUS_FILTER } from '../constants/TaskFilterStatus';\n\nconst initialState = STATUS_FILTER.ALL;\n\nconst FilterStatusContext = createContext(initialState);\n\nexport const FilterStatusProvider = ({children}) =>{\n\n    const [currentTaskFilter, setCurrentTaskFilter] = useState(initialState)\n\n    return(\n        <FilterStatusContext.Provider value={{currentTaskFilter, setCurrentTaskFilter}}>\n            {children}\n        </FilterStatusContext.Provider>\n    );\n};\n\nexport const useFilterStatus = () => useContext(FilterStatusContext);\n","export const TOKEN = 'TOKEN'\n","export const STATUS_FILTER = {\n    ALL: 0,\n    NEW: 1,\n    IN_PROGRESS: 2,\n    DUE_DATE: 3,\n    CLOSED: 4\n  };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SplashWrapper = styled.div`\n    background-color: #0f66ff;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const Splash = () =>(\n    <React.Fragment>\n        <SplashWrapper>\n            <img alt=\"\" src='./assets/logo.png'/>\n        </SplashWrapper>\n        \n    </React.Fragment>\n)\n","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const Globalstyle = createGlobalStyle`\nbody{\n  margin: 0;\n  padding: 0;\n  font-family: 'Roboto';\n}\na{\n    text-decoration: none;\n}\n`;\n\nexport const PageWrapper = styled.div`\n    padding: 15px 20px;\n`;\n\nexport const PageWrapperMenu = styled.div`\n    padding: 15px 15px 71px;\n`;\n\nexport const LogoWrapper = styled.div`\n    text-align: center;\n`;\n\nexport const TopLink = styled.div`\n    text-align: right;\n`;\n","import React from \"react\";\nimport { Button } from \"../../components/Button\";\nimport { Input } from \"../../components/Input\";\nimport { PageWrapper,LogoWrapper } from \"../../globalStyles\";\n\nexport const Signup = () => (\n    <PageWrapper>\n        <LogoWrapper>\n            <img src=\"./assets/logo-color.png\" alt=\"logo\" />\n        </LogoWrapper>\n        <Input \n            type=\"text\" \n            placeholder=\"Enter your name\" \n            label=\"Name\" />\n        <Input \n            type=\"email\" \n            placeholder=\"Enter your email\" \n            label=\"Email Address\" />\n        <Input \n            type=\"password\" \n            placeholder=\"Enter your password\" \n            label=\"Password\" />\n        <Input \n            type=\"password\" \n            placeholder=\"Confirm your password\" \n            label=\"Confirm password\" />\n        <Button \n            text=\"Sign up\"\n            color=\"#222\"\n        />\n    </PageWrapper>\n)\n","import styled from \"styled-components\";\n\nexport const LinkWrapper = styled.span`\n    a{\n        color: #0f66ff;\n        text-decoration: none;\n    }\n`;\n","import { Link } from \"react-router-dom\";\nimport { LinkWrapper } from \"./styles\";\nexport const LinkTo = ({url, text}) =>(\n    <LinkWrapper>\n        <Link to={url}>{text}</Link>\n    </LinkWrapper>\n)\n","import styled from \"styled-components\";\nimport { Theme1 } from \"../../themes/theme1\";\n\nexport const LabelError = styled.span`\n    font-weight: bold;\n    color: ${Theme1.danger}\n`;\n","import React from \"react\";\nimport { Button } from \"../../components/Button\";\nimport { Input } from \"../../components/Input\";\nimport { LinkTo } from \"../../components/LinkTo\";\nimport { PageWrapper,LogoWrapper, TopLink } from \"../../globalStyles\";\nimport { useForm } from \"react-hook-form\";\nimport { LabelError } from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLogin } from \"../../store\";\n\n\nexport const Signin = () => {\n\n    const dispatch = useDispatch();\n    const userData = useSelector(state => state.user);\n\n    const {register,control, handleSubmit, formState: {errors, isValid}} = useForm({mode: 'onChange'});\n    const onSubmitLogin = (data) =>{\n        console.log('date form', data);\n        dispatch(fetchLogin(data));\n    };\n    return(\n    <PageWrapper>\n        <form onSubmit={handleSubmit(onSubmitLogin)}>\n        <TopLink>\n            <LinkTo text=\"Sign up\" url=\"/signup\"/>\n        </TopLink>\n        <LogoWrapper>\n            <img src=\"./assets/logo-color.png\" alt=\"logo\" />\n        </LogoWrapper>\n        {\n            userData.error && <LabelError>Email or password incorrect</LabelError>\n        }\n        \n            <Input register={register} rules={{required: true, minLength: 6}} name=\"email\"\n                type=\"email\" \n                placeholder=\"Enter your email\" \n                rules={{required: true}}\n                label=\"Email Address\" />\n    \n            {\n                errors.user && <LabelError>Field required</LabelError>\n            }\n            {\n                errors.user?.type==='minLength' && <LabelError>Min Length 6 characters</LabelError>   \n            }\n            <Input register={register} rules={{required: true}} name=\"password\"\n                type=\"password\" \n                placeholder=\"Enter your password\" \n                rules={{required: true}}\n                label=\"Password\" />\n            {\n                errors.password && <LabelError>Field required</LabelError>\n            }\n        <Button \n            disabled={!isValid} \n            type=\"submit\"\n            text={userData.loading ? 'Checking...' : 'Sign in'}\n            color=\"#222\"\n        />\n        </form>\n    </PageWrapper>\n    )\n}\n","export const NotFound = () => (\n    <p>404 Page not found</p>\n)","import styled from \"styled-components\";\n\nexport const ItemWrapper = styled.div`\n    svg{\n        //color: #C7C7CC;\n        color: ${props => props.active ? '#0066FF' : '#C7C7CC' };\n        font-size: 1.2em;\n    }\n    //border: 1px solid red;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 0;\n    flex: 1;\n    cursor: pointer;\n\n    &:hover{\n        svg, p{\n            color: #0066FF;\n        }\n    }\n    a{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-decoration: none;\n    }\n`;\n\nexport const Label= styled.p`\n    line-height: 0px;\n    color: ${props => props.active ? '#0066FF' : '#C7C7CC' };\n    font-size: 0.95em;\n`;\n","import { Link } from \"react-router-dom\";\nimport { ItemWrapper, Label } from \"./styles\";\n\nexport const ItemMenu = ({label, icon: Icon, path, active}) => (\n\n    <ItemWrapper active={active}>\n        <Link to={path}>\n       <Icon />\n        <Label active={active}>{label}</Label>\n        </Link>\n    </ItemWrapper>\n)\n","import styled from \"styled-components\";\n\nexport const MenuWrapper = styled.menu`\n    display: flex;\n    padding: 0;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    margin: 0;\n    border-top: 1px solid #CCC;\n    background-color: #fff;\n`;\n","import { FaHome, FaCalendar, FaCheckCircle, FaUser } from \"react-icons/fa\";\nimport { ItemMenu } from \"./comoponents/ItemMenu\";\nimport { MenuWrapper } from \"./styles\";\n\nconst MenuOptions = [\n    {\n        icon: FaHome,\n        label: 'Home',\n        path: '/'\n    },\n    {\n        icon: FaCalendar,\n        label: 'Schedule',\n        path: '/schedule'\n    },\n    {\n        icon: FaCheckCircle,\n        label: 'Create task',\n        path: '/create'\n    },\n    {\n        icon: FaUser,\n        label: 'Profile',\n        path: '/profile'\n    },\n];\n\nexport const Menu = ({pathname}) => {\n    return(\n        <MenuWrapper>\n            {MenuOptions.map((item, i) => (\n                <ItemMenu active={item.path===pathname} key={i} {...item} />\n            ))}\n        </MenuWrapper>\n    )\n}\n\n","import styled from \"styled-components\";\n\nexport const LoadingProgress = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    border: 1px solid red;\n    p{\n        font-size: 0%.95em;\n        color: #666;\n    }\n`;\n","import { LoadingProgress } from \"./styles\";\n\nexport const Loading = () => (\n    <LoadingProgress>\n        <p>Loading...</p>\n    </LoadingProgress>\n)\n","import React, { Fragment, useEffect, Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, useLocation } from \"react-router-dom\";\nimport { Splash } from \"./Splash\";\nimport { Signup } from \"./Signup\";\nimport { Signin } from \"./Signin\";\nimport { NotFound } from \"./NotFound\";\n//import  Home  from \"./Home\";\n//import { Schedule } from \"./Schedule\";\n//import { CreateTask } from \"./CreateTask\";\n//import { TaskDetail } from \"./TaskDetail\";\nimport { Menu } from \"../components/Menu\";\nimport { PageWrapperMenu } from \"../globalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { autologin } from \"../store\";\nimport { Loading } from \"../components/Loading\";\n\nconst Home = React.lazy(() => import('./Home'));\nconst Schedule = React.lazy(() => import('./Schedule'));\nconst CreateTask = React.lazy(() => import('./CreateTask'));\nconst TaskDetail = React.lazy(() => import('./TaskDetail'));\nexport const AutenticatedUser = ({children}) => {\n    const {pathname} = useLocation();\n\n    useEffect(() => {\n        console.log('pathname',pathname);\n    },[pathname])\n    \n    return ( \n        <Fragment>\n            \n            <PageWrapperMenu>\n                {children}\n            </PageWrapperMenu>\n            <Menu pathname={pathname}/>\n        </Fragment>\n    )\n}\nexport const NotAutenticatedUser = ({children}) => {\n    return children;\n}\n\n export const NavigationApp = () => {\n    const userData = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    //const [auth, setAuth] = useState(false);\n    //const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        setTimeout(() => {\n            dispatch(autologin());\n        },1000);\n    },[]);\n\n    if(userData.splash){\n        return <Splash />\n    }\n\n     return(\n        <Router>\n            {\n                !userData.isAuth && (\n                    <NotAutenticatedUser>\n                        <Switch>\n                            <Route exact path=\"/\" component={Signin} />\n                            <Route path=\"/signup\" component={Signup} />\n                            <Route path=\"*\" component={NotFound} />\n                            \n                        </Switch>\n                    </NotAutenticatedUser>\n                )\n            }\n            {\n                userData.isAuth && (\n                    <AutenticatedUser>\n                        <Switch>\n\n                            <Route exact path=\"/\" >\n                                <Suspense fallback={<Loading/>}>\n                                    <Home \n                                        title=\"Tasks\"\n                                    />\n                                </Suspense>  \n                            </Route>\n                            <Route path=\"/schedule\" >\n                                <Suspense fallback={<Loading/>}>\n                                    <Schedule \n                                        title=\"Schedules\"\n                                    />\n                                </Suspense>\n                            </Route>\n                            <Route path=\"/create\">\n                                <Suspense fallback={<Loading/>}>\n                                    <CreateTask title=\"Create new task\" />\n                                </Suspense>\n                            </Route>\n                            <Route path=\"/detail/:id\" >\n                                <Suspense fallback={<Loading/>}>\n                                    <TaskDetail title=\"Task Detail\"/>\n                                </Suspense>\n                            </Route>\n                            <Route path=\"*\" component={NotFound} />\n                        </Switch>\n                    </AutenticatedUser>\n                )\n            }\n            \n        </Router>\n     );\n }\n","import { FETCH_TASK_SUCCESS, FETCH_TASK_FAILURE, FETCH_TASK_REQUEST} from \"./taskTypes\";\n\nconst initialState = {\n    loading: false,\n    tasks: [],\n    error: ''\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case FETCH_TASK_REQUEST:\n            return{\n                ...state,\n                loading: true,\n            }\n        case FETCH_TASK_SUCCESS:\n            return{\n                loading: false,\n                error: \"\",\n                tasks: action.payload\n            }\n        case FETCH_TASK_FAILURE:\n            return{\n                loading: false,\n                error: action.payload,\n                tasks: []\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import {CREATE_TASK_REQUEST, CREATE_TASK_SUCCESS, CREATE_TASK_FAILURE} from './createTaskTypes';\n\nconst initialState = {\n    loading: false,\n    tasks: [],\n    error: ''\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        \n        case CREATE_TASK_REQUEST:\n            return{\n                ...state,\n                loading: true,\n            }\n        case CREATE_TASK_SUCCESS:\n            return{\n                ...state,\n                loading: false,\n                error: \"\"\n               // tasks: action.payload\n            }\n        case CREATE_TASK_FAILURE:\n            return{\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import {FETCH_LOGIN_REQUEST, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_FAILURE, AUTOLOGIN_FAILURE, AUTOLOGIN_SUCCESS} from \"./userTypes\";\n\nconst initialState = {\n    loading: false,\n    isAuth: false,\n    error: '',\n    splash: true\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case FETCH_LOGIN_REQUEST:\n            return{\n                ...state,\n                loading: true,\n                //splash: false\n            };\n        case FETCH_LOGIN_SUCCESS:\n            return{\n                loading: false,\n                error: '',\n                isAuth: true,\n                //splash: false\n            };\n        case FETCH_LOGIN_FAILURE:\n            return{\n                loading: false,\n                error: action.payload,\n                isAuth: false,\n                //splash: false\n            };\n        case AUTOLOGIN_SUCCESS:\n            return{\n                ...state,\n                isAuth: true,\n                splash: false\n            };\n        case AUTOLOGIN_FAILURE:\n            return{\n                ...state,\n                isAuth: false,\n                splash: false\n            };\n        /*case FETCH_USERS_SUCCESS:\n            return{\n                ...state,\n                isAuth: false,\n                splash: false\n            };*/\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import {FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAILURE} from \"./responsibleTypes\";\n\nconst initialState = {\n    loading: false,\n    responsibles: [],\n    error: ''\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case FETCH_USERS_REQUEST:\n            return{\n                ...state,\n                loading: true,\n            }\n        case FETCH_USERS_SUCCESS:\n            const arreglo = action.payload;\n            let datos=[];\n            //todo for\n            for(var i=0; i<arreglo.length; i++){\n                datos.push({value: arreglo[i]._id, label: arreglo[i].name});\n            }\n            \n\n            return{\n                loading: false,\n                error: \"\",\n                responsibles: datos\n            }\n        case FETCH_USERS_FAILURE:\n            return{\n                loading: false,\n                error: action.payload,\n                responsibles: []\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport taskReducer from \"./tasks/taskReducer\";\nimport createTaskReducer from \"./createTask/createTaskReducer\";\nimport userReducer from \"./user/userReducer\"\nimport responsibleReducer from \"./responsibles/responsibleReducer\";\nconst rootReducer = combineReducers({\n    task: taskReducer,\n    user: userReducer,\n    responsibles: responsibleReducer,\n    createTask: createTaskReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nconst store = createStore(rootReducer, applyMiddleware(logger,thunk));\n\nexport default store;\n","import { NavigationApp } from \"./pages/NavigationApp\";\nimport React from \"react\";\nimport {Globalstyle} from \"./globalStyles\";\nimport { FilterStatusProvider } from \"./contexts/FilterStatusContext\";\nimport {Provider} from 'react-redux';\nimport store from \"./store/store\";\n\nexport const App = () => (\n  <React.Fragment>\n    <Globalstyle />\n    <Provider store={store}>\n      <FilterStatusProvider>\n        <NavigationApp />\n      </FilterStatusProvider>\n    </Provider>\n  </React.Fragment>\n) \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}