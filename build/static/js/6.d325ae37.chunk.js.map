{"version":3,"sources":["components/Task/styles.js","components/Task/index.js","utils/DateFormats.js","pages/Home/components/styles.js","pages/Home/components/TaskFilter.js","pages/Home/index.js","components/Topbar/styles.js","components/Topbar/index.js","constants/TaskStatus.js"],"names":["TaskWrapper","styled","div","Responsable","p","TasksDetail","TimeLeft","TaskStatus","props","color","TaskTitle","h4","Taks","isoDate","title","responsible","due_date","status","id","_id","to","name","moment","fromNow","statusId","getStatusById","renderStatus","TaskFilterWrapper","FilterStatusTaskWrapper","active","FilterStatusTask","statusName","onPress","onClick","TaskFilter","useFilterStatus","currentTaskFilter","setCurrentTaskFilter","TASK_STATUS","map","item","key","newStatusId","connect","state","tasksData","task","dispatch","fetchTasksAction","filter","fetchTasks","useEffect","console","log","STATUS_FILTER","ALL","Topbar","isBackVisible","loading","error","tasks","TopbarContainer","TopbarTitle","BackButtonTopbar","Theme1","primary","find","el"],"mappings":"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","file":"static/js/6.d325ae37.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TaskWrapper = styled.div`\n    border: 2px solid #F1F6FF;\n    border-radius: 6px;\n    margin: 10px 15px;\n    padding: 10px;\n    opacity: 0.85;\n    a {\n        text-decoration: none;\n    }\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const Responsable = styled.p`\n    font-size: 0.90em;\n    color: #616161;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const TasksDetail = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n`;\n\nexport const TimeLeft = styled.div`\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    svg {\n        color: #616161;\n    }\n    p {\n        font-size: 0.90em;\n        color: #616161;\n        margin: 0 10px;\n        padding: 0;        \n    }\n`;\n\nexport const TaskStatus = styled.p`\n    font-size: 0.90em;\n    color: #fff;\n    margin: 0;\n    padding: 0;\n    padding: 3px 5px;\n    background-color: ${props => props.color || '#666'};\n    \n    border-radius: 3px;\n`;\n\nexport const TaskTitle = styled.h4`\n    margin: 0;\n    padding: 0;\n    color: #222;\n    font-size: 1.1em;\n`;\n","import {\n  Responsable,\n  TaskStatus,\n  TasksDetail,\n  TaskWrapper,\n  TimeLeft,\n  TaskTitle,\n} from \"./styles\";\nimport { FaRegClock } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { getStatusById } from \"../../constants/TaskStatus\";\nimport { timeLeftFromNow } from \"../../utils/DateFormats\";\n\n\nexport const Taks = ({ title, responsible, due_date, status, _id: id}) => {\n\n  const renderStatus = (statusId) => {\n    const status = getStatusById(statusId);\n    return(\n      <TaskStatus color={status.color}>{status.name}</TaskStatus>\n    )\n  }\n\n\n  return (\n    <Link to={`/detail/${id}`}>\n      <TaskWrapper>\n        <TaskTitle>{title}</TaskTitle>\n        <TasksDetail>\n          <Responsable>{responsible.name}</Responsable>\n          <TimeLeft>\n            <FaRegClock />\n            <p>{\n              timeLeftFromNow(due_date)\n            } </p>\n          </TimeLeft>\n          {renderStatus(status)}\n        </TasksDetail>\n      </TaskWrapper>\n    </Link>\n  );\n};\n","import moment from \"moment\";\n\nexport const timeLeftFromNow = (isoDate) => {\n    const momentDate = moment(isoDate);\n    //console.log('monet date', momentDate);\n    //console.log('from now', momentDate.fromNow());\n    return momentDate.fromNow();\n}\n","import styled from \"styled-components\";\n\nexport const TaskFilterWrapper = styled.div`\n    //border: 1px solid red;\n    display: flex;\n    justify-content: space-between;\n    margin: 30px 0px 20px;\n    \n`;\n\nexport const FilterStatusTaskWrapper = styled.div`\n    font-size: 1.1.em;\n    color: ${props => props.active ? '#0066FF' : '#777'};\n    font-weight: ${props => props.active ? 'bold' : '300'};\n    cursor: pointer;\n    &:hover{\n        color: #0066FF;\n    }\n`;\n\n","import { TASK_STATUS } from \"../../../constants/TaskStatus\";\nimport { useFilterStatus } from \"../../../contexts/FilterStatusContext\";\nimport { FilterStatusTaskWrapper, TaskFilterWrapper } from \"./styles\";\n\nconst FilterStatusTask = ({statusName, statusId, active, onPress}) => (\n    <FilterStatusTaskWrapper onClick={() => onPress(statusId)} active={active} >{statusName}</FilterStatusTaskWrapper>\n) \n\nexport const TaskFilter = () => {\n    const {currentTaskFilter, setCurrentTaskFilter} = useFilterStatus();\n\n    return (\n    <TaskFilterWrapper>\n        <FilterStatusTask/>   \n        {\n            TASK_STATUS.map((item, key)=>(\n                <FilterStatusTask onPress={ (newStatusId) => setCurrentTaskFilter(newStatusId) } statusId={item.id} active={item.id === currentTaskFilter} key={key} statusName={item.name}/>\n                ))\n        }\n    </TaskFilterWrapper>\n    );\n}\n","import { useEffect } from \"react\";\nimport { Taks } from \"../../components/Task\";\nimport { TaskFilter } from \"./components/TaskFilter\";\nimport { STATUS_FILTER } from \"./../../constants/TaskFilterStatus\";\nimport { useFilterStatus } from \"../../contexts/FilterStatusContext\";\nimport { Topbar } from \"./../../components/Topbar\";\nimport { connect } from 'react-redux';\nimport { fetchTasks } from \"../../store\";\n\n\n\nconst Home = ({title, tasksData, fetchTasksAction}) => {\n  //const {currentTaskFilter, seCurrentTaskFilter} = useFilterStatus();\n  const {currentTaskFilter} = useFilterStatus();\n\n  useEffect(()=>{\n\n      console.log('texto tarea', tasksData);      \n\n  }, [tasksData]);\n\n  useEffect(() => {\n    fetchTasksAction();\n  }, []);\n\n useEffect(() => {\n    if(currentTaskFilter === STATUS_FILTER.ALL){\n      fetchTasksAction();\n    }else{\n      fetchTasksAction({status: currentTaskFilter});\n    }\n  }, [currentTaskFilter]);\n\n\n  return(\n    <>\n      <Topbar isBackVisible={false} title={title} />\n        <TaskFilter />\n        {\n          tasksData.loading && <p>Loading...</p>\n        }\n        {\n          tasksData.error && <p>{tasksData.error}</p>\n        }\n        <div>\n          {tasksData.tasks.map((item, key) => (\n            <Taks key={key} {...item} />\n          ))}\n        </div>\n      \n    </>\n  )\n};\n\nconst mapStateToProps = state => {\n  return{\n    tasksData: state.task\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    fetchTasksAction: (filter) => dispatch(fetchTasks(filter))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import styled from \"styled-components\";\nimport { Theme1 } from \"./../../themes/theme1\";\nexport const TopbarContainer = styled.div`\n    //border: 1px solid black;\n    display: flex;\n    align-items: center;\n    padding: 10px 20px;\n`;\n\nexport const TopbarTitle = styled.div`\n    flex: 1;\n    text-align: center;\n    h4{\n        font-size: 1.3em;\n    }\n`;\n\nexport const BackButtonTopbar = styled.div`\n    svg{\n        font-size: 1.5em;\n        color: #888;\n        cursor: pointer;\n        &:hover{\n            color: ${Theme1.primary};\n        }\n    }\n\n`;\n","import { BackButtonTopbar, TopbarContainer, TopbarTitle } from \"./styles\"\nimport { FaAngleLeft } from \"react-icons/fa\";\n\nexport const Topbar = ({ isBackVisible = true, title, onPress}) =>{\n    return(\n        <TopbarContainer>\n            {isBackVisible && <BackButtonTopbar onClick={onPress}><FaAngleLeft /></BackButtonTopbar>}           \n            <TopbarTitle>\n                <h4>{title}</h4>\n            </TopbarTitle>\n        </TopbarContainer>\n    );\n};\n","export const TASK_STATUS = [\n    {\n        id: 0,\n        name: 'All',\n        color: '#CCC'\n    },\n    {\n        id: 1,\n        name: 'New',\n        color: '#00AEFF'\n    },\n    {\n        id: 2,\n        name: 'In progress',\n        color: '#FBAC0E'\n    },\n    {\n        id: 3,\n        name: 'Due date',\n        color: '#F24236'\n    },\n    {\n        id: 4,\n        name: 'Closed',\n        color: '#00C972'\n    }\n];\n\nexport const getStatusById = (id) =>(\n    TASK_STATUS.find(el => el.id === id)\n)\n"],"sourceRoot":""}